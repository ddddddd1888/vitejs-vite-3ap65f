{
  "version": 3,
  "sources": ["../../@studio-freight/lenis/src/maths.js", "../../@studio-freight/lenis/src/animate.js", "../../@studio-freight/lenis/src/dimensions.js", "../../@studio-freight/lenis/src/debounce.js", "../../@studio-freight/lenis/src/emitter.js", "../../@studio-freight/lenis/src/virtual-scroll.js", "../../@studio-freight/src/index.ts"],
  "sourcesContent": ["// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n", "import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, completed)\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(\r\n    from,\r\n    to,\r\n    { lerp = 0.1, duration = 1, easing = (t) => t, onStart, onUpdate }\r\n  ) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    onStart?.()\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n", "import { debounce } from './debounce'\r\n\r\nexport class Dimensions {\r\n  constructor({ wrapper, content, autoResize = true } = {}) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (autoResize) {\r\n      const resize = debounce(this.resize, 250)\r\n\r\n      if (this.wrapper !== window) {\r\n        this.wrapperResizeObserver = new ResizeObserver(resize)\r\n        this.wrapperResizeObserver.observe(this.wrapper)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(resize)\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    this.scrollHeight = this.content.scrollHeight\r\n    this.scrollWidth = this.content.scrollWidth\r\n  }\r\n\r\n  get limit() {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n", "export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n", "export class Emitter {\r\n  constructor() {\r\n    this.events = {}\r\n  }\r\n\r\n  emit(event, ...args) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  }\r\n\r\n  on(event, cb) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\r\n    }\r\n  }\r\n\r\n  off(event, callback) {\r\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n  }\r\n\r\n  destroy() {\r\n    this.events = {}\r\n  }\r\n}\r\n", "import { Emitter } from './emitter'\r\nimport { clamp } from './maths'\r\n\r\nexport class VirtualScroll {\r\n  constructor(\r\n    element,\r\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\r\n  ) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n    this.normalizeWheel = normalizeWheel\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = new Emitter()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX: 0,\r\n      deltaY: 0,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\r\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event) => {\r\n    this.emitter.emit('scroll', {\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event) => {\r\n    let { deltaX, deltaY } = event\r\n\r\n    if (this.normalizeWheel) {\r\n      deltaX = clamp(-100, deltaX, 100)\r\n      deltaY = clamp(-100, deltaY, 100)\r\n    }\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\r\n  }\r\n}\r\n", "import { version } from '../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { Emitter } from './emitter'\r\nimport { clamp, modulo } from './maths'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explanation\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\ntype EasingFunction = (t: number) => number\r\ntype Orientation = 'vertical' | 'horizontal'\r\ntype GestureOrientation = 'vertical' | 'horizontal' | 'both'\r\n\r\nexport type LenisOptions = {\r\n  wrapper?: Window | HTMLElement\r\n  content?: HTMLElement\r\n  wheelEventsTarget?: Window | HTMLElement\r\n  eventsTarget?: Window | HTMLElement\r\n  smoothWheel?: boolean\r\n  syncTouch?: boolean\r\n  syncTouchLerp?: number\r\n  touchInertiaMultiplier?: number\r\n  duration?: number\r\n  easing?: EasingFunction\r\n  lerp?: number\r\n  infinite?: boolean\r\n  orientation?: Orientation\r\n  gestureOrientation?: GestureOrientation\r\n  touchMultiplier?: number\r\n  wheelMultiplier?: number\r\n  normalizeWheel?: boolean\r\n  autoResize?: boolean\r\n}\r\n\r\nexport default class Lenis {\r\n  __isSmooth: boolean = false // true if scroll should be animated\r\n  __isScrolling: boolean = false // true when scroll is animating\r\n  __isStopped: boolean = false // true if user should not be able to scroll - enable/disable programmatically\r\n  __isLocked: boolean = false // same as isStopped but enabled/disabled when scroll reaches target\r\n\r\n  constructor({\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper, // deprecated\r\n    eventsTarget = wheelEventsTarget,\r\n    smoothWheel = true,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.075,\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = !duration && 0.1,\r\n    infinite = false,\r\n    orientation = 'vertical', // vertical, horizontal\r\n    gestureOrientation = 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = 1,\r\n    normalizeWheel = false, // deprecated\r\n    autoResize = true,\r\n  }: LenisOptions = {}) {\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      eventsTarget,\r\n      smoothWheel,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n      autoResize,\r\n    }\r\n\r\n    this.animate = new Animate()\r\n    this.emitter = new Emitter()\r\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\r\n    this.toggleClassName('lenis', true)\r\n\r\n    this.velocity = 0\r\n    this.isLocked = false\r\n    this.isStopped = false\r\n    this.isSmooth = syncTouch || smoothWheel\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onNativeScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll = new VirtualScroll(eventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.options.wrapper.removeEventListener('scroll', this.onNativeScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.toggleClassName('lenis', false)\r\n    this.toggleClassName('lenis-smooth', false)\r\n    this.toggleClassName('lenis-scrolling', false)\r\n    this.toggleClassName('lenis-stopped', false)\r\n    this.toggleClassName('lenis-locked', false)\r\n  }\r\n\r\n  on(event: string, callback: Function) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event: string, callback: Function) {\r\n    return this.emitter.off(event, callback)\r\n  }\r\n\r\n  private setScroll(scroll) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  private onVirtualScroll = ({ deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = event.type.includes('touch')\r\n    const isWheel = event.type.includes('wheel')\r\n\r\n    const isTapToStop =\r\n      this.options.syncTouch && isTouch && event.type === 'touchstart'\r\n\r\n    if (isTapToStop) {\r\n      this.reset()\r\n      return\r\n    }\r\n\r\n    const isClick = deltaX === 0 && deltaY === 0 // click event\r\n\r\n    // const isPullToRefresh =\r\n    //   this.options.gestureOrientation === 'vertical' &&\r\n    //   this.scroll === 0 &&\r\n    //   !this.options.infinite &&\r\n    //   deltaY <= 5 // touch pull to refresh, not reliable yet\r\n\r\n    const isUnknownGesture =\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\r\n\r\n    if (isClick || isUnknownGesture) {\r\n      // console.log('prevent')\r\n      return\r\n    }\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    let composedPath = event.composedPath()\r\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\r\n\r\n    if (\r\n      !!composedPath.find(\r\n        (node) =>\r\n          node.hasAttribute?.('data-lenis-prevent') ||\r\n          (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\r\n          (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\r\n          node.classList?.contains('lenis') // nested lenis instance\r\n      )\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n\r\n    this.isSmooth =\r\n      (this.options.syncTouch && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!this.isSmooth) {\r\n      this.isScrolling = false\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const isTouchEnd = isTouch && event.type === 'touchend'\r\n\r\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 5\r\n\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch\r\n        ? {\r\n            lerp: hasTouchInertia ? this.options.syncTouchLerp : 1,\r\n          }\r\n        : {\r\n            lerp: this.options.lerp,\r\n            duration: this.options.duration,\r\n            easing: this.options.easing,\r\n          }),\r\n    })\r\n  }\r\n\r\n  resize() {\r\n    this.dimensions.resize()\r\n  }\r\n\r\n  private emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  private onNativeScroll = () => {\r\n    if (this.__preventNextScrollEvent) return\r\n\r\n    if (!this.isScrolling) {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.velocity = 0\r\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\r\n      this.emit()\r\n    }\r\n  }\r\n\r\n  private reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.animatedScroll = this.targetScroll = this.actualScroll\r\n    this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time: number) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target: number | string | HTMLElement,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = !duration && this.options.lerp,\r\n      onComplete,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n    }: {\r\n      offset?: number\r\n      immediate?: boolean\r\n      lock?: boolean\r\n      duration?: number\r\n      easing?: EasingFunction\r\n      lerp?: number\r\n      onComplete?: (lenis: Lenis) => void\r\n      force?: boolean\r\n      programmatic?: boolean\r\n    } = {}\r\n  ) {\r\n    if ((this.isStopped || this.isLocked) && !force) return\r\n\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      onComplete?.(this)\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      if (target === this.targetScroll) return\r\n\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onStart: () => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = true\r\n      },\r\n      onUpdate: (value: number, completed: boolean) => {\r\n        this.isScrolling = true\r\n\r\n        // updated\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity)\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        if (!completed) this.emit()\r\n\r\n        if (completed) {\r\n          this.reset()\r\n          this.emit()\r\n          onComplete?.(this)\r\n\r\n          // avoid emitting event twice\r\n          this.__preventNextScrollEvent = true\r\n          requestAnimationFrame(() => {\r\n            delete this.__preventNextScrollEvent\r\n          })\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return this.options.wrapper === window\r\n      ? document.documentElement\r\n      : this.options.wrapper\r\n  }\r\n\r\n  get limit() {\r\n    return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll() {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll() {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress() {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.__isSmooth\r\n  }\r\n\r\n  private set isSmooth(value: boolean) {\r\n    if (this.__isSmooth !== value) {\r\n      this.__isSmooth = value\r\n      this.toggleClassName('lenis-smooth', value)\r\n    }\r\n  }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  private set isScrolling(value: boolean) {\r\n    if (this.__isScrolling !== value) {\r\n      this.__isScrolling = value\r\n      this.toggleClassName('lenis-scrolling', value)\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  private set isStopped(value: boolean) {\r\n    if (this.__isStopped !== value) {\r\n      this.__isStopped = value\r\n      this.toggleClassName('lenis-stopped', value)\r\n    }\r\n  }\r\n\r\n  get isLocked() {\r\n    return this.__isLocked\r\n  }\r\n\r\n  private set isLocked(value: boolean) {\r\n    if (this.__isLocked !== value) {\r\n      this.__isLocked = value\r\n      this.toggleClassName('lenis-locked', value)\r\n    }\r\n  }\r\n\r\n  get className() {\r\n    let className = 'lenis'\r\n    if (this.isStopped) className += ' lenis-stopped'\r\n    if (this.isLocked) className += ' lenis-locked'\r\n    if (this.isScrolling) className += ' lenis-scrolling'\r\n    if (this.isSmooth) className += ' lenis-smooth'\r\n    return className\r\n  }\r\n\r\n  private toggleClassName(name: string, value: boolean) {\r\n    this.rootElement.classList.toggle(name, value)\r\n    this.emitter.emit('className change', this)\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;AACO,SAASA,EAAMC,IAAKC,GAAOC,GAAAA;AAChC,SAAOC,KAAKD,IAAIF,IAAKG,KAAKH,IAAIC,GAAOC,CAAAA,CAAAA;AACvC;ACAO,IAAME,UAAN,MAAMA;EAEX,QAAQC,GAAAA;ADJH;ACKH,QAAA,CAAKC,KAAKC;AAAW;AAErB,QAAIC,IAAAA;AAEJ,QAAIF,KAAKG;AACPH,WAAKI,SDKUC,ICLGL,KAAKI,ODKLE,ICLYN,KAAKO,IDKdC,ICL8B,KAAZR,KAAKG,MDKfM,ICL0BV,GDAtD,SAAcM,IAAGC,IAAGI,IAAAA;AACzB,gBAAQ,IAAIA,MAAKL,KAAIK,KAAIJ;MAC3B,EAIcD,GAAGC,GAAG,IAAIT,KAAKc,IAAAA,CAAKH,IAASC,CAAAA,CAAAA,ICLjCZ,KAAKe,MAAMZ,KAAKI,KAAAA,MAAWJ,KAAKO,OAClCP,KAAKI,QAAQJ,KAAKO,IAClBL,IAAAA;SAEG;AACLF,WAAKa,eAAed;AACpB,YAAMe,KAAiBrB,EAAM,GAAGO,KAAKa,cAAcb,KAAKe,UAAU,CAAA;AAElEb,UAAYY,MAAkB;AAC9B,YAAME,KAAgBd,IAAY,IAAIF,KAAKiB,OAAOH,EAAAA;AAClDd,WAAKI,QAAQJ,KAAKkB,QAAQlB,KAAKO,KAAKP,KAAKkB,QAAQF;IAClD;ADPE,QAAcX,GAAGC,GAAGE,GAAQC;ACU/BT,eAAKmB,aAALnB,8BAAgBA,KAAKI,OAAOF,IAExBA,KACFF,KAAKoB,KAAAA;EAER;EAGD,OAAAA;AACEpB,SAAKC,YAAAA;EACN;EAID,OACEiB,IACAX,GAAAA,EACAJ,MAAEA,IAAO,KAAGY,UAAEA,IAAW,GAACE,QAAEA,IAAUP,CAAAA,OAAMA,IAACW,SAAEA,GAAOF,UAAEA,EAAAA,GAAAA;AAExDnB,SAAKkB,OAAOlB,KAAKI,QAAQc,IACzBlB,KAAKO,KAAKA,GACVP,KAAKG,OAAOA,GACZH,KAAKe,WAAWA,GAChBf,KAAKiB,SAASA,GACdjB,KAAKa,cAAc,GACnBb,KAAKC,YAAAA,MAELoB,0BACArB,KAAKmB,WAAWA;EACjB;AAAA;ACrDI,IAAMG,aAAN,MAAMA;EACX,YAAAC,EAAYC,SAAEA,IAAOC,SAAEA,GAAOC,YAAEA,IAAAA,KAAa,IAAS,CAAA,GAAA;AAwBtDC,kCAAS,MAAA;AACP3B,WAAK4B,gBAAAA,GACL5B,KAAK6B,gBAAAA;IAAiB;AAGxBD,2CAAkB,MAAA;AACZ5B,WAAKwB,YAAYM,UACnB9B,KAAK+B,QAAQD,OAAOE,YACpBhC,KAAKiC,SAASH,OAAOI,gBAErBlC,KAAK+B,QAAQ/B,KAAKwB,QAAQW,aAC1BnC,KAAKiC,SAASjC,KAAKwB,QAAQY;IAC5B;AAGHP,2CAAkB,MAAA;AAChB7B,WAAKqC,eAAerC,KAAKyB,QAAQY,cACjCrC,KAAKsC,cAActC,KAAKyB,QAAQa;IAAW;AArC3C,QAHAtC,KAAKwB,UAAUA,IACfxB,KAAKyB,UAAUA,GAEXC,GAAY;AACd,YAAMC,KCRL,yBAAkBY,IAAUC,IAAAA;AACjC,YAAIC;AACJ,eAAO,WAAA;AACL,cAAIC,IAAOC,WACPC,IAAU5C;AACd6C,uBAAaJ,EAAAA,GACbA,KAAQK,WAAW,WAAA;AACjBP,YAAAA,GAASQ,MAAMH,GAASF,CAAAA;UACzB,GAAEF,EAAAA;QACJ;MACH,EDF8BxC,KAAK2B,QAAQ,GAAA;AAEjC3B,WAAKwB,YAAYM,WACnB9B,KAAKgD,wBAAwB,IAAIC,eAAetB,EAAAA,GAChD3B,KAAKgD,sBAAsBE,QAAQlD,KAAKwB,OAAAA,IAG1CxB,KAAKmD,wBAAwB,IAAIF,eAAetB,EAAAA,GAChD3B,KAAKmD,sBAAsBD,QAAQlD,KAAKyB,OAAAA;IACzC;AAEDzB,SAAK2B,OAAAA;EACN;EAED,UAAAyB;AFrBK;AEsBHpD,eAAKgD,0BAALhD,mBAA4BqD,eAC5BrD,UAAKmD,0BAALnD,mBAA4BqD;EAC7B;EAsBD,IAAA,QAAIC;AACF,WAAO,EACLjD,GAAGL,KAAKsC,cAActC,KAAK+B,OAC3BzB,GAAGN,KAAKqC,eAAerC,KAAKiC,OAAAA;EAE/B;AAAA;AEpDI,IAAMsB,UAAN,MAAMA;EACX,cAAAhC;AACEvB,SAAKwD,SAAS,CAAE;EACjB;EAED,KAAKC,OAAUf,GAAAA;AACb,QAAIgB,IAAY1D,KAAKwD,OAAOC,EAAAA,KAAU,CAAA;AACtC,aAASE,KAAI,GAAGC,IAASF,EAAUE,QAAQD,KAAIC,GAAQD;AACrDD,QAAUC,EAAAA,EAAAA,GAAMjB,CAAAA;EAEnB;EAED,GAAGe,IAAOI,GAAAA;AJXL;AIgBH,aAHA7D,UAAKwD,OAAOC,EAAAA,MAAZzD,mBAAoB8D,KAAKD,QAAQ7D,KAAKwD,OAAOC,EAAAA,IAAS,CAACI,CAAAA,IAGhD,MAAA;AJhBJ,UAAAE;AIiBD/D,WAAKwD,OAAOC,EAAAA,KAASzD,MAAAA,KAAKwD,OAAOC,EAAAA,MAAZzD,gBAAAA,IAAoBgE,OAAQL,CAAAA,OAAME,MAAOF;IAAE;EAEnE;EAED,IAAIF,IAAOlB,GAAAA;AJrBN;AIsBHvC,SAAKwD,OAAOC,EAAAA,KAASzD,UAAKwD,OAAOC,EAAAA,MAAZzD,mBAAoBgE,OAAQL,CAAAA,OAAMpB,MAAaoB;EACrE;EAED,UAAAP;AACEpD,SAAKwD,SAAS,CAAE;EACjB;AAAA;ACzBI,IAAMS,gBAAN,MAAMA;EACX,YACEC,IAAAA,EACAC,iBAAEA,IAAkB,GAACC,iBAAEA,IAAkB,GAACC,gBAAEA,IAAAA,MAAiB,GAAA;AAkD/DC,wCAAgBb,CAAAA,OAAAA;AACd,YAAA,EAAMc,SAAEA,GAAOC,SAAEA,EAAAA,IAAYf,GAAMgB,gBAC/BhB,GAAMgB,cAAc,CAAA,IACpBhB;AAEJzD,WAAK0E,WAAWrE,IAAIkE,GACpBvE,KAAK0E,WAAWpE,IAAIkE,GAEpBxE,KAAK2E,YAAY,EACftE,GAAG,GACHC,GAAG,EAAA,GAGLN,KAAK4E,QAAQC,KAAK,UAAU,EAC1BC,QAAQ,GACRC,QAAQ,GACRtB,OAAAA,GAAAA,CAAAA;IACA;AAIJuB,uCAAevB,CAAAA,OAAAA;AACb,YAAA,EAAMc,SAAEA,GAAOC,SAAEA,EAAAA,IAAYf,GAAMgB,gBAC/BhB,GAAMgB,cAAc,CAAA,IACpBhB,IAEEqB,IAAAA,EAAWP,IAAUvE,KAAK0E,WAAWrE,KAAKL,KAAKoE,iBAC/CW,IAAAA,EAAWP,IAAUxE,KAAK0E,WAAWpE,KAAKN,KAAKoE;AAErDpE,WAAK0E,WAAWrE,IAAIkE,GACpBvE,KAAK0E,WAAWpE,IAAIkE,GAEpBxE,KAAK2E,YAAY,EACftE,GAAGyE,GACHxE,GAAGyE,EAAAA,GAGL/E,KAAK4E,QAAQC,KAAK,UAAU,EAC1BC,QAAAA,GACAC,QAAAA,GACAtB,OAAAA,GAAAA,CAAAA;IACA;AAGJwB,sCAAcxB,CAAAA,OAAAA;AACZzD,WAAK4E,QAAQC,KAAK,UAAU,EAC1BC,QAAQ9E,KAAK2E,UAAUtE,GACvB0E,QAAQ/E,KAAK2E,UAAUrE,GACvBmD,OAAAA,GAAAA,CAAAA;IACA;AAIJyB,mCAAWzB,OAAAA;AACT,UAAA,EAAIqB,QAAEA,GAAMC,QAAEA,EAAAA,IAAWtB;AAErBzD,WAAKqE,mBACPS,IAASrF,EAAAA,MAAYqF,GAAQ,GAAA,GAC7BC,IAAStF,EAAAA,MAAYsF,GAAQ,GAAA,IAG/BD,KAAU9E,KAAKmE,iBACfY,KAAU/E,KAAKmE,iBAEfnE,KAAK4E,QAAQC,KAAK,UAAU,EAAEC,QAAAA,GAAQC,QAAAA,GAAQtB,OAAAA,EAAAA,CAAAA;IAAQ;AAhHtDzD,SAAKkE,UAAUA,IACflE,KAAKmE,kBAAkBA,GACvBnE,KAAKoE,kBAAkBA,GACvBpE,KAAKqE,iBAAiBA,GAEtBrE,KAAK0E,aAAa,EAChBrE,GAAG,MACHC,GAAG,KAAA,GAGLN,KAAK4E,UAAU,IAAIrB,WAEnBvD,KAAKkE,QAAQiB,iBAAiB,SAASnF,KAAKkF,SAAS,EAAEE,SAAAA,MAAS,CAAA,GAChEpF,KAAKkE,QAAQiB,iBAAiB,cAAcnF,KAAKsE,cAAc,EAC7Dc,SAAAA,MAAS,CAAA,GAEXpF,KAAKkE,QAAQiB,iBAAiB,aAAanF,KAAKgF,aAAa,EAC3DI,SAAAA,MAAS,CAAA,GAEXpF,KAAKkE,QAAQiB,iBAAiB,YAAYnF,KAAKiF,YAAY,EACzDG,SAAAA,MAAS,CAAA;EAEZ;EAGD,GAAG3B,IAAOlB,GAAAA;AACR,WAAOvC,KAAK4E,QAAQS,GAAG5B,IAAOlB,CAAAA;EAC/B;EAGD,UAAAa;AACEpD,SAAK4E,QAAQxB,QAAAA,GAEbpD,KAAKkE,QAAQoB,oBAAoB,SAAStF,KAAKkF,SAAS,EACtDE,SAAAA,MAAS,CAAA,GAEXpF,KAAKkE,QAAQoB,oBAAoB,cAActF,KAAKsE,cAAc,EAChEc,SAAAA,MAAS,CAAA,GAEXpF,KAAKkE,QAAQoB,oBAAoB,aAAatF,KAAKgF,aAAa,EAC9DI,SAAAA,MAAS,CAAA,GAEXpF,KAAKkE,QAAQoB,oBAAoB,YAAYtF,KAAKiF,YAAY,EAC5DG,SAAAA,MAAS,CAAA;EAEZ;AAmEuD;AChF5C,IAAOG,QAAP,MAAOA;EAMnB,YAAAhE,EAAYC,SACVA,KAAUM,QAAML,SAChBA,IAAU+D,SAASC,iBAAeC,mBAClCA,IAAoBlE,IAAOmE,cAC3BA,IAAeD,GAAiBE,aAChCA,IAAAA,MAAkBC,WAClBA,IAAAA,OAAiBC,eACjBA,IAAgB,OAAKC,wBACrBA,IAAyB,IAAEhF,UAC3BA,GAAQE,QACRA,IAAUP,CAAAA,OAAMb,KAAKH,IAAI,GAAG,QAAQG,KAAKmG,IAAI,GAAA,MAAStF,EAAAA,CAAAA,GAAGP,MACzDA,IAAAA,CAAQY,KAAY,KAAGkF,UACvBA,IAAAA,OAAgBC,aAChBA,IAAc,YAAUC,oBACxBA,IAAqB,YAAU/B,iBAC/BA,IAAkB,GAACD,iBACnBA,IAAkB,GAACE,gBACnBA,IAAAA,OAAsB3C,YACtBA,IAAAA,KAAa,IACG,CAAA,GAAA;AAxBlB1B,SAAUoG,aAAAA,OACVpG,KAAaqG,gBAAAA,OACbrG,KAAWsG,cAAAA,OACXtG,KAAUuG,aAAAA,OA4GFvG,KAAewG,kBAAG,CAAA,EAAG1B,QAAAA,IAAQC,QAAAA,IAAQtB,OAAAA,GAAAA,MAAAA;AAE3C,UAAIA,GAAMgD;AAAS;AAEnB,YAAMC,KAAUjD,GAAMkD,KAAKC,SAAS,OAAA,GAC9BC,KAAUpD,GAAMkD,KAAKC,SAAS,OAAA;AAKpC,UAFE5G,KAAK8G,QAAQjB,aAAaa,MAA0B,iBAAfjD,GAAMkD;AAI3C,eAAA,KADA3G,KAAK+G,MAAAA;AAIP,YAAMC,KAAqB,MAAXlC,MAA2B,MAAXC,IAQ1BkC,KACiC,eAApCjH,KAAK8G,QAAQX,sBAAgD,MAAXpB,MACd,iBAApC/E,KAAK8G,QAAQX,sBAAkD,MAAXrB;AAEvD,UAAIkC,MAAWC;AAEb;AAIF,UAAIC,KAAezD,GAAMyD,aAAAA;AAGzB,UAFAA,KAAeA,GAAaC,MAAM,GAAGD,GAAaE,QAAQpH,KAAKqH,WAAAA,CAAAA,GAG3DH,GAAaI,KACZC,CAAAA,OAAAA;AAAAA,YAAAA,IAAAA,IAAAA,IAAAA;AACC,gBAAiB,UAAjBxD,KAAAwD,GAAKC,iBAAAA,WAAYzD,KAAAA,SAAAA,GAAA0D,KAAAF,IAAG,oBAAA,MACnBb,OAA+B,UAApBgB,KAAAH,GAAKC,iBAAAA,WAAeE,KAAAA,SAAAA,GAAAD,KAAAF,IAAA,0BAAA,MAC/BV,OAA+B,UAApBc,KAAAJ,GAAKC,iBAAAA,WAAeG,KAAAA,SAAAA,GAAAF,KAAAF,IAAA,0BAAA,OAClB,UAAdK,KAAAL,GAAKM,cAAAA,WAASD,KAAAA,SAAAA,GAAEE,SAAS,OAAA;MAAQ,CAAA;AAGrC;AAEF,UAAI9H,KAAK+H,aAAa/H,KAAKgI;AAEzB,eAAA,KADAvE,GAAMwE,eAAAA;AAQR,UAJAjI,KAAKkI,WACFlI,KAAK8G,QAAQjB,aAAaa,MAC1B1G,KAAK8G,QAAQlB,eAAeiB,IAAAA,CAE1B7G,KAAKkI;AAGR,eAFAlI,KAAKmI,cAAAA,OAAc,KACnBnI,KAAKoI,QAAQhH,KAAAA;AAIfqC,MAAAA,GAAMwE,eAAAA;AAEN,UAAII,KAAQtD;AAC4B,iBAApC/E,KAAK8G,QAAQX,qBACfkC,KAAQxI,KAAKyI,IAAIvD,EAAAA,IAAUlF,KAAKyI,IAAIxD,EAAAA,IAAUC,KAASD,KACV,iBAApC9E,KAAK8G,QAAQX,uBACtBkC,KAAQvD;AAGV,YAAMe,KAAYa,MAAW1G,KAAK8G,QAAQjB,WAGpC0C,KAFa7B,MAA0B,eAAfjD,GAAMkD,QAEE9G,KAAKyI,IAAID,EAAAA,IAAS;AAEpDE,MAAAA,OACFF,KAAQrI,KAAKwI,WAAWxI,KAAK8G,QAAQf,yBAGvC/F,KAAKyI,SAASzI,KAAK0I,eAAeL,IAAKM,OAAAC,OAAA,EACrCC,cAAAA,MAAc,GACVhD,KACA,EACE1F,MAAMoI,KAAkBvI,KAAK8G,QAAQhB,gBAAgB,EAAA,IAEvD,EACE3F,MAAMH,KAAK8G,QAAQ3G,MACnBY,UAAUf,KAAK8G,QAAQ/F,UACvBE,QAAQjB,KAAK8G,QAAQ7F,OAAAA,CAAAA,CAAAA;IAE3B,GAWIjB,KAAc8I,iBAAG,MAAA;AACvB,UAAA,CAAI9I,KAAK+I,4BAAAA,CAEJ/I,KAAKmI,aAAa;AACrB,cAAMa,KAAahJ,KAAKiJ;AACxBjJ,aAAKiJ,iBAAiBjJ,KAAK0I,eAAe1I,KAAKkJ,cAC/ClJ,KAAKwI,WAAW,GAChBxI,KAAKmJ,YAAYtJ,KAAKuJ,KAAKpJ,KAAKiJ,iBAAiBD,EAAAA,GACjDhJ,KAAK6E,KAAAA;MACN;IAAA,GArMD/C,OAAOuH,eAAAA,UAGH7H,OAAYgE,SAASC,mBAAmBjE,OAAYgE,SAAS8D,SAC/D9H,KAAUM,SAGZ9B,KAAK8G,UAAU,EACbtF,SAAAA,IACAC,SAAAA,GACAiE,mBAAAA,GACAC,cAAAA,GACAC,aAAAA,GACAC,WAAAA,GACAC,eAAAA,GACAC,wBAAAA,GACAhF,UAAAA,GACAE,QAAAA,GACAd,MAAAA,GACA8F,UAAAA,GACAE,oBAAAA,GACAD,aAAAA,GACA9B,iBAAAA,GACAD,iBAAAA,GACAE,gBAAAA,GACA3C,YAAAA,EAAAA,GAGF1B,KAAKoI,UAAU,IAAItI,WACnBE,KAAK4E,UAAU,IAAIrB,WACnBvD,KAAKuJ,aAAa,IAAIjI,WAAW,EAAEE,SAAAA,IAASC,SAAAA,GAASC,YAAAA,EAAAA,CAAAA,GACrD1B,KAAKwJ,gBAAgB,SAAA,IAAS,GAE9BxJ,KAAKwI,WAAW,GAChBxI,KAAKgI,WAAAA,OACLhI,KAAK+H,YAAAA,OACL/H,KAAKkI,WAAWrC,KAAaD,GAC7B5F,KAAKmI,cAAAA,OACLnI,KAAK0I,eAAe1I,KAAKiJ,iBAAiBjJ,KAAKkJ,cAE/ClJ,KAAK8G,QAAQtF,QAAQ2D,iBAAiB,UAAUnF,KAAK8I,gBAAgB,EACnE1D,SAAAA,MAAS,CAAA,GAGXpF,KAAKyJ,gBAAgB,IAAIxF,cAAc0B,GAAc,EACnDvB,iBAAAA,GACAD,iBAAAA,GACAE,gBAAAA,EAAAA,CAAAA,GAEFrE,KAAKyJ,cAAcpE,GAAG,UAAUrF,KAAKwG,eAAAA;EACtC;EAED,UAAApD;AACEpD,SAAK4E,QAAQxB,QAAAA,GAEbpD,KAAK8G,QAAQtF,QAAQ8D,oBAAoB,UAAUtF,KAAK8I,gBAAgB,EACtE1D,SAAAA,MAAS,CAAA,GAGXpF,KAAKyJ,cAAcrG,QAAAA,GACnBpD,KAAKuJ,WAAWnG,QAAAA,GAEhBpD,KAAKwJ,gBAAgB,SAAA,KAAS,GAC9BxJ,KAAKwJ,gBAAgB,gBAAA,KAAgB,GACrCxJ,KAAKwJ,gBAAgB,mBAAA,KAAmB,GACxCxJ,KAAKwJ,gBAAgB,iBAAA,KAAiB,GACtCxJ,KAAKwJ,gBAAgB,gBAAA,KAAgB;EACtC;EAED,GAAG/F,IAAelB,GAAAA;AAChB,WAAOvC,KAAK4E,QAAQS,GAAG5B,IAAOlB,CAAAA;EAC/B;EAED,IAAIkB,IAAelB,GAAAA;AACjB,WAAOvC,KAAK4E,QAAQ8E,IAAIjG,IAAOlB,CAAAA;EAChC;EAEO,UAAUoH,IAAAA;AAEZ3J,SAAK4J,eACP5J,KAAKqH,YAAYwC,aAAaF,KAE9B3J,KAAKqH,YAAYyC,YAAYH;EAEhC;EAgGD,SAAAhI;AACE3B,SAAKuJ,WAAW5H,OAAAA;EACjB;EAEO,OAAAkD;AACN7E,SAAK4E,QAAQC,KAAK,UAAU7E,IAAAA;EAC7B;EAcO,QAAA+G;AACN/G,SAAKgI,WAAAA,OACLhI,KAAKmI,cAAAA,OACLnI,KAAKiJ,iBAAiBjJ,KAAK0I,eAAe1I,KAAKkJ,cAC/ClJ,KAAKwI,WAAW,GAChBxI,KAAKoI,QAAQhH,KAAAA;EACd;EAED,QAAA2I;AACE/J,SAAK+H,YAAAA,OAEL/H,KAAK+G,MAAAA;EACN;EAED,OAAA3F;AACEpB,SAAK+H,YAAAA,MACL/H,KAAKoI,QAAQhH,KAAAA,GAEbpB,KAAK+G,MAAAA;EACN;EAED,IAAIiD,IAAAA;AACF,UAAMjK,IAAYiK,MAAQhK,KAAKgK,QAAQA;AACvChK,SAAKgK,OAAOA,IAEZhK,KAAKoI,QAAQ6B,QAAoB,OAAZlK,CAAAA;EACtB;EAED,SACEmK,GAAAA,EACAC,QACEA,IAAS,GAACC,WACVA,IAAAA,OAAiBC,MACjBA,IAAAA,OAAYtJ,UACZA,IAAWf,KAAK8G,QAAQ/F,UAAQE,QAChCA,IAASjB,KAAK8G,QAAQ7F,QAAMd,MAC5BA,IAAAA,CAAQY,KAAYf,KAAK8G,QAAQ3G,MAAImK,YACrCA,GAAUC,OACVA,IAAAA,OAAa1B,cACbA,IAAAA,KAAe,IAWb,CAAA,GAAA;AAEJ,QAAA,CAAK7I,KAAK+H,aAAAA,CAAa/H,KAAKgI,YAAcuC,GAA1C;AAGA,UAAI,CAAC,OAAO,QAAQ,OAAA,EAAS3D,SAASsD,CAAAA;AACpCA,YAAS;eACA,CAAC,UAAU,SAAS,KAAA,EAAOtD,SAASsD,CAAAA;AAC7CA,YAASlK,KAAKsD;WACT;AACL,YAAIiE;AAUJ,YARsB,YAAA,OAAX2C,IAET3C,KAAO/B,SAASgF,cAAcN,CAAAA,KACrBA,QAAAA,IAAAA,SAAAA,EAAQO,cAEjBlD,KAAO2C,IAGL3C,IAAM;AACR,cAAIvH,KAAK8G,QAAQtF,YAAYM,QAAQ;AAEnC,kBAAM4I,KAAc1K,KAAK8G,QAAQtF,QAAQmJ,sBAAAA;AACzCR,iBAAUnK,KAAK4J,eAAec,GAAYE,OAAOF,GAAYG;UAC9D;AAED,gBAAMC,KAAOvD,GAAKoD,sBAAAA;AAElBT,eACGlK,KAAK4J,eAAekB,GAAKF,OAAOE,GAAKD,OAAO7K,KAAKiJ;QACrD;MACF;AAED,UAAsB,YAAA,OAAXiB,GAAX;AAaA,YAXAA,KAAUC,GACVD,IAASrK,KAAKe,MAAMsJ,CAAAA,GAEhBlK,KAAK8G,QAAQb,WACX4C,MACF7I,KAAK0I,eAAe1I,KAAKiJ,iBAAiBjJ,KAAK2J,UAGjDO,IAASzK,EAAM,GAAGyK,GAAQlK,KAAKsD,KAAAA,GAG7B8G;AAKF,iBAJApK,KAAKiJ,iBAAiBjJ,KAAK0I,eAAewB,GAC1ClK,KAAK+K,UAAU/K,KAAK2J,MAAAA,GACpB3J,KAAK+G,MAAAA,GAAAA,MACLuD,QAAAA,KAAAA,EAAatK,IAAAA;AAIf,YAAA,CAAK6I,GAAc;AACjB,cAAIqB,MAAWlK,KAAK0I;AAAc;AAElC1I,eAAK0I,eAAewB;QACrB;AAEDlK,aAAKoI,QAAQ4C,OAAOhL,KAAKiJ,gBAAgBiB,GAAQ,EAC/CnJ,UAAAA,GACAE,QAAAA,GACAd,MAAAA,GACAkB,SAAS,MAAA;AAEHgJ,gBAAMrK,KAAKgI,WAAAA,OACfhI,KAAKmI,cAAAA;QAAkB,GAEzBhH,UAAU,CAACf,IAAeF,OAAAA;AACxBF,eAAKmI,cAAAA,MAGLnI,KAAKwI,WAAWpI,KAAQJ,KAAKiJ,gBAC7BjJ,KAAKmJ,YAAYtJ,KAAKuJ,KAAKpJ,KAAKwI,QAAAA,GAEhCxI,KAAKiJ,iBAAiB7I,IACtBJ,KAAK+K,UAAU/K,KAAK2J,MAAAA,GAEhBd,MAEF7I,KAAK0I,eAAetI,KAGjBF,MAAWF,KAAK6E,KAAAA,GAEjB3E,OACFF,KAAK+G,MAAAA,GACL/G,KAAK6E,KAAAA,GACLyF,QAAAA,KAAAA,EAAatK,IAAAA,GAGbA,KAAK+I,2BAAAA,MACLkC,sBAAsB,MAAA;AAAA,mBACbjL,KAAK+I;UAAwB,CAAA;QAEvC,EAAA,CAAA;MA/DiC;IAhCiB;EAkGxD;EAED,IAAA,cAAI1B;AACF,WAAOrH,KAAK8G,QAAQtF,YAAYM,SAC5B0D,SAASC,kBACTzF,KAAK8G,QAAQtF;EAClB;EAED,IAAA,QAAI8B;AACF,WAAOtD,KAAKuJ,WAAWjG,MAAMtD,KAAK4J,eAAe,MAAM,GAAA;EACxD;EAED,IAAA,eAAIA;AACF,WAAoC,iBAA7B5J,KAAK8G,QAAQZ;EACrB;EAED,IAAA,eAAIgD;AAEF,WAAOlJ,KAAK4J,eACR5J,KAAKqH,YAAYwC,aACjB7J,KAAKqH,YAAYyC;EACtB;EAED,IAAA,SAAIH;AACF,WAAO3J,KAAK8G,QAAQb,YNlaDiF,KMmaRlL,KAAKiJ,gBNnaMkC,IMmaUnL,KAAKsD,QNla9B4H,KAAIC,IAAKA,KAAKA,KMmajBnL,KAAKiJ;ANpaN,QAAgBiC,IAAGC;EMqavB;EAED,IAAA,WAAIC;AAEF,WAAsB,MAAfpL,KAAKsD,QAAc,IAAItD,KAAK2J,SAAS3J,KAAKsD;EAClD;EAED,IAAA,WAAI4E;AACF,WAAOlI,KAAKoG;EACb;EAED,IAAA,SAAqBhG,IAAAA;AACfJ,SAAKoG,eAAehG,OACtBJ,KAAKoG,aAAahG,IAClBJ,KAAKwJ,gBAAgB,gBAAgBpJ,EAAAA;EAExC;EAED,IAAA,cAAI+H;AACF,WAAOnI,KAAKqG;EACb;EAED,IAAA,YAAwBjG,IAAAA;AAClBJ,SAAKqG,kBAAkBjG,OACzBJ,KAAKqG,gBAAgBjG,IACrBJ,KAAKwJ,gBAAgB,mBAAmBpJ,EAAAA;EAE3C;EAED,IAAA,YAAI2H;AACF,WAAO/H,KAAKsG;EACb;EAED,IAAA,UAAsBlG,IAAAA;AAChBJ,SAAKsG,gBAAgBlG,OACvBJ,KAAKsG,cAAclG,IACnBJ,KAAKwJ,gBAAgB,iBAAiBpJ,EAAAA;EAEzC;EAED,IAAA,WAAI4H;AACF,WAAOhI,KAAKuG;EACb;EAED,IAAA,SAAqBnG,IAAAA;AACfJ,SAAKuG,eAAenG,OACtBJ,KAAKuG,aAAanG,IAClBJ,KAAKwJ,gBAAgB,gBAAgBpJ,EAAAA;EAExC;EAED,IAAA,YAAIiL;AACF,QAAIA,KAAY;AAKhB,WAJIrL,KAAK+H,cAAWsD,MAAa,mBAC7BrL,KAAKgI,aAAUqD,MAAa,kBAC5BrL,KAAKmI,gBAAakD,MAAa,qBAC/BrL,KAAKkI,aAAUmD,MAAa,kBACzBA;EACR;EAEO,gBAAgBC,IAAclL,GAAAA;AACpCJ,SAAKqH,YAAYQ,UAAU0D,OAAOD,IAAMlL,CAAAA,GACxCJ,KAAK4E,QAAQC,KAAK,oBAAoB7E,IAAAA;EACvC;AAAA;",
  "names": ["clamp", "min", "input", "max", "Math", "Animate", "deltaTime", "this", "isRunning", "completed", "lerp", "value", "x", "y", "to", "lambda", "dt", "t", "exp", "round", "currentTime", "linearProgress", "duration", "easedProgress", "easing", "from", "onUpdate", "stop", "onStart", "Dimensions", "constructor", "wrapper", "content", "autoResize", "resize", "onWrapperResize", "onContentResize", "window", "width", "innerWidth", "height", "innerHeight", "clientWidth", "clientHeight", "scrollHeight", "scrollWidth", "callback", "delay", "timer", "args", "arguments", "context", "clearTimeout", "setTimeout", "apply", "wrapperResizeObserver", "ResizeObserver", "observe", "contentResizeObserver", "destroy", "disconnect", "limit", "Emitter", "events", "event", "callbacks", "i", "length", "cb", "push", "_a", "filter", "VirtualScroll", "element", "wheelMultiplier", "touchMultiplier", "normalizeWheel", "onTouchStart", "clientX", "clientY", "targetTouches", "touchStart", "lastDelta", "emitter", "emit", "deltaX", "deltaY", "onTouchMove", "onTouchEnd", "onWheel", "addEventListener", "passive", "on", "removeEventListener", "Lenis", "document", "documentElement", "wheelEventsTarget", "eventsTarget", "smoothWheel", "syncTouch", "syncTouchLerp", "touchInertiaMultiplier", "pow", "infinite", "orientation", "gestureOrientation", "__isSmooth", "__isScrolling", "__isStopped", "__isLocked", "onVirtualScroll", "ctrlKey", "isTouch", "type", "includes", "isWheel", "options", "reset", "isClick", "isUnknownGesture", "composedPath", "slice", "indexOf", "rootElement", "find", "node", "hasAttribute", "call", "_b", "_c", "_d", "classList", "contains", "isStopped", "isLocked", "preventDefault", "isSmooth", "isScrolling", "animate", "delta", "abs", "hasTouchInertia", "velocity", "scrollTo", "targetScroll", "Object", "assign", "programmatic", "onNativeScroll", "__preventNextScrollEvent", "lastScroll", "animatedScroll", "actualScroll", "direction", "sign", "lenisVersion", "body", "dimensions", "toggleClassName", "virtualScroll", "off", "scroll", "isHorizontal", "scrollLeft", "scrollTop", "start", "time", "advance", "target", "offset", "immediate", "lock", "onComplete", "force", "querySelector", "nodeType", "wrapperRect", "getBoundingClientRect", "left", "top", "rect", "setScroll", "fromTo", "requestAnimationFrame", "n", "d", "progress", "className", "name", "toggle"]
}
